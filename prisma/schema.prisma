generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model client {
  id              Int           @id @default(autoincrement()) @db.UnsignedInt
  name            String        @db.VarChar(255)
  email           String        @unique(map: "email") @db.VarChar(350)
  tel             String        @unique(map: "tel") @db.VarChar(50)
  country         String        @db.VarChar(200)
  address         String        @db.Text
  category        String        @db.Text
  role            String        @default("user") @db.VarChar(50)
  pfp_url         String?       @db.Text
  doc_url         String?       @db.Text
  business_status Boolean?
  password        String        @db.Text
  status          String        @default("unverified") @db.VarChar(50)
  created_at      DateTime?     @default(now()) @db.Timestamp(0)
  lead            lead[]
  testimonial     testimonial[]
  otp             otp[]
  ptoken          ptoken[]
  organisation    organisation[]
}

model lead {
  id                 Int          @id @default(autoincrement()) @db.UnsignedInt
  message            String       @db.Text
  service_interested String       @db.Text
  organisation_id    Int          @db.UnsignedInt
  client_id          Int          @db.UnsignedInt
  client             client       @relation(fields: [client_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_client_id")
  organisation       organisation @relation(fields: [organisation_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_organisation_id")

  @@index([client_id], map: "fk_client_id")
  @@index([organisation_id], map: "fk_organisation_id")
}

model organisation {
  id          Int           @id @default(autoincrement()) @db.UnsignedInt
  name        String        @db.VarChar(450)
  email       String        @unique(map: "email") @db.VarChar(350)
  address     String        @db.Text
  country     String?       @db.Text
  type        String?       @db.Text
  industry    String?       @db.Text
  rc_number   String?       @unique(map: "rc_number") @db.VarChar(200)
  staff_size  String?       @db.Text
  logo_url    String?       @db.Text
  created_at  DateTime?     @default(now()) @db.Timestamp(0)
  client_id   Int           @db.UnsignedInt
  client      client        @relation(fields: [client_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_org_client_id")
  lead        lead[]
  service     service[]
  testimonial testimonial[]
  contact     contact[]

  @@index([client_id], map: "fk_org_client_id")
}

model service {
  id              Int          @id @default(autoincrement()) @db.UnsignedInt
  title           String       @db.Text
  description     String       @db.Text
  organisation_id Int          @db.UnsignedInt
  organisation    organisation @relation(fields: [organisation_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_service_organisation_id")

  @@index([organisation_id], map: "fk_service_organisation_id")
}

model testimonial {
  id              Int          @id @default(autoincrement()) @db.UnsignedInt
  message         String       @db.Text
  client_id       Int          @db.UnsignedInt
  organisation_id Int          @db.UnsignedInt
  client          client       @relation(fields: [client_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_t_client_id")
  organisation    organisation @relation(fields: [organisation_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_t_organisation_id")

  @@index([client_id], map: "fk_t_client_id")
  @@index([organisation_id], map: "fk_t_organisation_id")
}

model contact{
  id               Int     @id @default(autoincrement()) @db.UnsignedInt 
  name             String  @db.Text
  pfp_url          String  @db.Text
  doc_url          String  @db.Text
  organisation_id  Int     @db.UnsignedInt
  organisation    organisation @relation(fields: [organisation_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_contact_organisation_id")

  @@index([organisation_id], map: "fk_contact_client_id")
}

model otp {
  id          String     @id @default(uuid())
  client_id   Int        @db.UnsignedInt
  otp         String     @db.Text
  expires_at  DateTime?  @db.Timestamp(0)
  created_at  DateTime?  @default(now()) @db.Timestamp(0)
  client      client     @relation(fields: [client_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_otp_client_id")

  @@index([client_id], map: "fk_otp_client_id")
}

model ptoken {
  id          String     @id @default(uuid())
  client_id   Int        @db.UnsignedInt
  token       String     @db.Text
  expires_at  DateTime?  @db.Timestamp(0)
  created_at  DateTime?  @default(now()) @db.Timestamp(0)
  client      client     @relation(fields: [client_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_token_client_id")

  @@index([client_id], map: "fk_token_client_id")
}
